From 1dcee4a08f601f77a4887d99bfe2ba8a1b2a1223 Mon Sep 17 00:00:00 2001
From: nadim365 <samnad14@gmail.com>
Date: Sat, 2 Jul 2022 21:35:31 -0400
Subject: [PATCH] created patch file for task 3

---
 .../0001-Created-Patch-File.patch             | 107 -----------------
 ...ed-code-to-reflect-the-ratio-between.patch | 113 ++++++++++++++++++
 2 files changed, 113 insertions(+), 107 deletions(-)
 delete mode 100644 JPMC-tech-task-2-PY3-master/0001-Created-Patch-File.patch
 create mode 100644 JPMC-tech-task-3-PY3-master/0001-added-code-to-reflect-the-ratio-between.patch

diff --git a/JPMC-tech-task-2-PY3-master/0001-Created-Patch-File.patch b/JPMC-tech-task-2-PY3-master/0001-Created-Patch-File.patch
deleted file mode 100644
index 52edf82..0000000
--- a/JPMC-tech-task-2-PY3-master/0001-Created-Patch-File.patch
+++ /dev/null
@@ -1,107 +0,0 @@
-From 8c73c5099124b35694d263484d2c5685bddf32fa Mon Sep 17 00:00:00 2001
-From: nadim365 <samnad14@gmail.com>
-Date: Sat, 2 Jul 2022 19:52:51 -0400
-Subject: [PATCH] Created Patch File
-
----
- .../datafeed/server3.py                       |  2 +-
- JPMC-tech-task-2-PY3-master/src/App.tsx       | 24 ++++++++++++++-----
- JPMC-tech-task-2-PY3-master/src/Graph.tsx     |  9 +++++--
- 3 files changed, 26 insertions(+), 9 deletions(-)
-
-diff --git a/JPMC-tech-task-2-PY3-master/datafeed/server3.py b/JPMC-tech-task-2-PY3-master/datafeed/server3.py
-index 1d59866..fb1c3a8 100644
---- a/JPMC-tech-task-2-PY3-master/datafeed/server3.py
-+++ b/JPMC-tech-task-2-PY3-master/datafeed/server3.py
-@@ -317,4 +317,4 @@ if __name__ == '__main__':
-     if not os.path.isfile('test.csv'):
-         print ("No data found, generating...")
-         generate_csv()
--    run(App())
-+    run(App())
-\ No newline at end of file
-diff --git a/JPMC-tech-task-2-PY3-master/src/App.tsx b/JPMC-tech-task-2-PY3-master/src/App.tsx
-index 0728518..149b1cf 100755
---- a/JPMC-tech-task-2-PY3-master/src/App.tsx
-+++ b/JPMC-tech-task-2-PY3-master/src/App.tsx
-@@ -8,6 +8,7 @@ import './App.css';
-  */
- interface IState {
-   data: ServerRespond[],
-+  showGraph: boolean,
- }
- 
- /**
-@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
-       // data saves the server responds.
-       // We use this state to parse data down to the child element (Graph) as element property
-       data: [],
-+      showGraph: false,
-     };
-   }
- 
-@@ -29,18 +31,28 @@ class App extends Component<{}, IState> {
-    * Render Graph react component with state.data parse as property data
-    */
-   renderGraph() {
--    return (<Graph data={this.state.data}/>)
-+    if(this.state.showGraph){
-+      return (<Graph data={this.state.data}/>)
-+    }
-   }
- 
-   /**
-    * Get new data from server and update the state with the new data
-    */
-   getDataFromServer() {
--    DataStreamer.getData((serverResponds: ServerRespond[]) => {
--      // Update the state by creating a new array of data that consists of
--      // Previous data in the state and the new data from server
--      this.setState({ data: [...this.state.data, ...serverResponds] });
--    });
-+    let x = 0;
-+    const interval = setInterval(() => {
-+      DataStreamer.getData((serverResponds: ServerRespond[]) =>{
-+        this.setState({
-+          data: serverResponds,
-+          showGraph: true,
-+        });
-+      });
-+      x++;
-+      if(x > 1000){
-+        clearInterval(interval);
-+      }
-+    }, 100);
-   }
- 
-   /**
-diff --git a/JPMC-tech-task-2-PY3-master/src/Graph.tsx b/JPMC-tech-task-2-PY3-master/src/Graph.tsx
-index ec1430e..8938afd 100644
---- a/JPMC-tech-task-2-PY3-master/src/Graph.tsx
-+++ b/JPMC-tech-task-2-PY3-master/src/Graph.tsx
-@@ -14,7 +14,7 @@ interface IProps {
-  * Perspective library adds load to HTMLElement prototype.
-  * This interface acts as a wrapper for Typescript compiler.
-  */
--interface PerspectiveViewerElement {
-+interface PerspectiveViewerElement extends HTMLElement {
-   load: (table: Table) => void,
- }
- 
-@@ -46,7 +46,12 @@ class Graph extends Component<IProps, {}> {
-     }
-     if (this.table) {
-       // Load the `table` in the `<perspective-viewer>` DOM reference.
--
-+      elem.setAttribute('view', 'y_line');
-+      elem.setAttribute('column-pivots', '["stock"]');
-+      elem.setAttribute('row-pivots', '["timestamp"]');
-+      elem.setAttribute('columns', '["top_ask_price"]');
-+      elem.setAttribute('aggregates',
-+       '{"stock":"distinct count","top_ask_price":"avg","top_bid_price":"avg","timestamp":"distinct count"}');
-       // Add more Perspective configurations here.
-       elem.load(this.table);
-     }
--- 
-2.37.0
-
diff --git a/JPMC-tech-task-3-PY3-master/0001-added-code-to-reflect-the-ratio-between.patch b/JPMC-tech-task-3-PY3-master/0001-added-code-to-reflect-the-ratio-between.patch
new file mode 100644
index 0000000..18ba00a
--- /dev/null
+++ b/JPMC-tech-task-3-PY3-master/0001-added-code-to-reflect-the-ratio-between.patch
@@ -0,0 +1,113 @@
+From 11e34a7c10920c0659abce0c7da0d8415183fbba Mon Sep 17 00:00:00 2001
+From: nadim365 <samnad14@gmail.com>
+Date: Sat, 2 Jul 2022 21:33:51 -0400
+Subject: [PATCH] added code to reflect the ratio between 2 given stocks and
+ trigger an alert when ratio crosses upper or lower bound
+
+---
+ .../src/DataManipulator.ts                    | 28 +++++++++++++------
+ JPMC-tech-task-3-PY3-master/src/Graph.tsx     | 25 ++++++++++-------
+ 2 files changed, 35 insertions(+), 18 deletions(-)
+
+diff --git a/JPMC-tech-task-3-PY3-master/src/DataManipulator.ts b/JPMC-tech-task-3-PY3-master/src/DataManipulator.ts
+index f6b15ff..a5ab928 100644
+--- a/JPMC-tech-task-3-PY3-master/src/DataManipulator.ts
++++ b/JPMC-tech-task-3-PY3-master/src/DataManipulator.ts
+@@ -1,20 +1,32 @@
+ import { ServerRespond } from './DataStreamer';
+ 
+ export interface Row {
+-  stock: string,
+-  top_ask_price: number,
++  price_abc: number,
++  price_def: number,
++  ratio: number,
+   timestamp: Date,
++  upper_bound: number,
++  lower_bound: number,
++  trigger_alert: number | undefined,
+ }
+ 
+ 
+ export class DataManipulator {
+-  static generateRow(serverResponds: ServerRespond[]): Row[] {
+-    return serverResponds.map((el: any) => {
++  static generateRow(serverResponds: ServerRespond[]): Row{ // in the slides the object for the server responses is sercerRespond but in the repo it is serverResponds.
++    const priceABC = (serverResponds[0].top_ask.price + serverResponds[0].top_bid.price) / 2;
++    const priceDEF = (serverResponds[1].top_ask.price + serverResponds[1].top_bid.price) / 2;
++    const ratio = priceABC / priceDEF;
++    const upperBound = 1 + 0.05;
++    const lowerBound = 1 - 0.05;
+       return {
+-        stock: el.stock,
+-        top_ask_price: el.top_ask && el.top_ask.price || 0,
+-        timestamp: el.timestamp,
++        price_abc: priceABC,
++        price_def: priceDEF,
++        ratio,
++        timestamp: serverResponds[0].timestamp > serverResponds[1].timestamp ?
++          serverResponds[0].timestamp : serverResponds[1].timestamp,
++        upper_bound: upperBound,
++        lower_bound: lowerBound,
++        trigger_alert: (ratio > upperBound || ratio < lowerBound) ? ratio : undefined,
+       };
+-    })
+   }
+ }
+diff --git a/JPMC-tech-task-3-PY3-master/src/Graph.tsx b/JPMC-tech-task-3-PY3-master/src/Graph.tsx
+index 58fb997..e278dc0 100644
+--- a/JPMC-tech-task-3-PY3-master/src/Graph.tsx
++++ b/JPMC-tech-task-3-PY3-master/src/Graph.tsx
+@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
+     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+ 
+     const schema = {
+-      stock: 'string',
+-      top_ask_price: 'float',
+-      top_bid_price: 'float',
++      price_abc: 'float',
++      price_def: 'float',
++      ratio: 'float',
+       timestamp: 'date',
++      upper_bound: 'float',
++      lower_bound: 'float',
++      trigger_alert: 'float',
+     };
+ 
+     if (window.perspective && window.perspective.worker()) {
+@@ -36,23 +39,25 @@ class Graph extends Component<IProps, {}> {
+       // Load the `table` in the `<perspective-viewer>` DOM reference.
+       elem.load(this.table);
+       elem.setAttribute('view', 'y_line');
+-      elem.setAttribute('column-pivots', '["stock"]');
+       elem.setAttribute('row-pivots', '["timestamp"]');
+-      elem.setAttribute('columns', '["top_ask_price"]');
++      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
+       elem.setAttribute('aggregates', JSON.stringify({
+-        stock: 'distinctcount',
+-        top_ask_price: 'avg',
+-        top_bid_price: 'avg',
++        price_abc: 'avg',
++        price_def: 'avg',
++        ratio: 'avg',
+         timestamp: 'distinct count',
++        upper_bound: 'avg',
++        lower_bound: 'avg',
++        trigger_alert: 'avg',
+       }));
+     }
+   }
+ 
+   componentDidUpdate() {
+     if (this.table) {
+-      this.table.update(
++      this.table.update([
+         DataManipulator.generateRow(this.props.data),
+-      );
++      ]);
+     }
+   }
+ }
+-- 
+2.37.0
+
-- 
2.37.0

